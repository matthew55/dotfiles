#!/usr/bin/env bash

# Use neovim for vim if present.
[ -x "$(command -v nvim)" ] && alias vim="nvim" vimdiff="nvim -d"

# Use $XINITRC variable if file exists.
[ -f "$XINITRC" ] && alias startx="startx $XINITRC"

[ -f "$MBSYNCRC" ] && alias mbsync="mbsync -c $MBSYNCRC"

# Open script file selected with fzf.
# Usage: se
se() {
	choice="$(find ~/.local/bin -mindepth 1 -printf '%P\n' | fzf)"
	[ -f "$HOME/.local/bin/$choice" ] && $EDITOR "$HOME/.local/bin/$choice"
}

# Extract almost every imaginable compressed file type.
# Usage: ex <file>
ex ()
{
  if [ -f "$1" ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;; 
	  *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *.deb)       ar x $1      ;;
      *.tar.xz)    tar xf $1    ;;
      *.tar.zst)   unzstd $1    ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Cd into directory just created.
# Usage: mkcd <directory>
mkcd ()
{
	[ -n $1 ] && mkdir $1 && cd $1 || echo "'$1' cannot be made"
}

# Copy files with rsync.
# Usage: cpr </path/to/source> </path/to/destination>
cpr() {
  rsync --archive -hh --partial --info=stats1,progress2 --modify-window=1 "$@"
} 

# Move files with rsync.
# Usage: mvr </path/to/source> </path/to/destination>
mvr() {
  rsync --archive -hh --partial --info=stats1,progress2 --modify-window=1 --remove-source-files "$@"
}

# Swap two names
# Usage: mkcd <file 1> <file 2>
swapfiles()
{
	tmp="$(mktemp)"
	[ -f $1 ] && [ -f $2 ] && cat "$1" > "$tmp" && mv -f "$2" "$1" && mv -f "$tmp" "$2" || echo "'$1' cannot be switched with '$2'"
	unset tmp
}

# sudo not required for some system commands.
for command in mount umount pacman nmtui su shutdown poweroff reboot ; do
	alias $command="sudo $command"
done; unset command

# Verbosity and settings that you pretty much just always are going to want.
alias \
	cp="cp -iv" \
	mv="mv -iv" \
	rm="rm -vI" \
	bc="bc -ql" \
	mkd="mkdir -pv" \
	yt="yt-dlp --embed-metadata -i" \
	yta="yt -x -f bestaudio/best" \
	ffmpeg="ffmpeg -hide_banner" \
    df="df -h" \
    free="free -m" \
    jctl="journalctl -p 3 -xb" \

# Colorize commands when possible.
alias \
	ls="ls -hFN --color=auto --group-directories-first" \
	grep="grep --color=auto" \
	diff="diff --color=auto" \
	ip="ip -color=auto" \
    yay="yay --color=auto" \
    pacman="pacman --color=auto" \
	cat="lolcat -f"

# Aliases
alias \
    ..="cd .." \
    cleanup="sudo pacman -Rncs $(pacman -Qtdq)" \
    cmatrix="cmatrix -a -u 3" \
    gpg-check="gpg2 --keyserver-options auto-key-retrieve --verify" \
    gpg-retrieve="gpg2 --keyserver-options auto-key-retrieve --receive-keys" \
	la="ls -A" \
	ll="ls -l" \
	lal="ls -lA" \
	lf="lfub" \
    mvn="mvn -gs $XDG_CONFIG_HOME/maven/settings.xml" \
	maven="mvn" \
	py="python" \
	speedtest="speedtest --secure" \
	sxiv="nsxiv" \
	sys="systemctl" \
    xclip="xclip -selection clipboard" \
	yarn="yarn --use-yarnrc ${XDG_CONFIG_HOME:-$HOME/.config}/yarn/config" \

# Run Scripts
alias \
    mirror="sudo reflector -f 30 -l 30 --number 10 --verbose --save /etc/pacman.d/mirrorlist" \
    mirrord="sudo reflector --latest 50 --number 20 --sort delay --save /etc/pacman.d/mirrorlist" \
    mirrors="sudo reflector --latest 50 --number 20 --sort score --save /etc/pacman.d/mirrorlist" \
    mirrora="sudo reflector --latest 50 --number 20 --sort age --save /etc/pacman.d/mirrorlist" \
	ref="shortcuts >/dev/null; source ${XDG_CONFIG_HOME:-$HOME/.config}/shell/shortcutrc" \

# Curl
alias \
    myip="curl ifconfig.co" \
    rr="curl -s -L http://bit.ly/10hA8iC | bash" \
    weather="curl wttr.in" 

# Github Aliases
alias \
	addup="git add -u" \
    addall="git add ." \
    branch="git branch" \
    checkout="git checkout" \
    clone="git clone" \
    commit="git commit" \
	diff="git diff" \
    fetch="git fetch" \
    pull="git pull origin" \
    push="git push" \
    status="git status" \
    tag="git tag" \
    newtag="git tag -a" \
    config="git --git-dir=${XDG_SHARED_DIR:-/home/shared}/coding-stuff/github/matthew55/dotfiles/ --work-tree=$HOME"

